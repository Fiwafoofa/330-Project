---
title: "Regression1"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
library(bestglm)

library(dplyr)
library(gridExtra)
library("corrplot")
library(caret)
library(ggplot2)
library(ggfortify)
library(car) # for avPlots

#basic reading file and plotting varaibales
set.seed(80085)
data = read.csv("possum.csv", sep =",")
data = data.frame(data)
data = na.omit(data)
data = data[,-1]
data$Pop = factor(data$Pop, levels =c("other","Vic"))
data$sex = factor(data$sex, levels =c("m","f"))
data$site = factor(data$site, levels =c("1","2","3","4","5","6","7","8","9","10"))

data = data %>% relocate(totlngth, .after =belly)
y=(data$sex)
X=as.matrix(data[, 2:13])

#site + hdlngth + taill + footlgth + chest
 #flip it correlation
ggplot(data = data, 
       mapping = aes(x = footlgth, 
                     y = totlngth, color = Pop)) + geom_point()
ggplot(data = data, 
       mapping = aes(x = hdlngth, 
                     y = totlngth, color = Pop)) + geom_point()
ggplot(data = data, 
       mapping = aes(x = site, 
                     y = totlngth, color = Pop)) + geom_point()
ggplot(data = data, 
       mapping = aes(x = chest, 
                     y = totlngth, color = Pop)) + geom_point()
ggplot(data = data, 
       mapping = aes(x = taill, 
                     y = totlngth, color = Pop)) + geom_point()


```

```{r}
aic_model = bestglm(data, IC = "AIC", method = "exhaustive")
bic_model = bestglm(data, IC = "BIC", method = "exhaustive")
summary(aic_model$BestModel)
summary(bic_model$BestModel)
```

```{r}
#correlation matrix, sexm and sexf are categorical so they are fine
data_dummies <- model.matrix(~ chest + hdlngth + taill - 1, data = data)
corrplot(cor(data_dummies))
```

```{r}
#model fitting and saving resiudals and fitted values
multReg = lm(totlngth ~ site+ chest +hdlngth+ taill, data = data)
summary(multReg)
data$Residuals = multReg$residuals
data$fitted = multReg$fitted.values
```

```{r}
#VIF all look normal
vif_values <- car::vif(multReg)
print(vif_values)
```

```{r}
#plot fitted versus predicted and avplots
plot(data$totlngth, fitted(multReg), main = "Observed vs. Predicted Total Length",
     xlab = "Observed Total Length", ylab = "Predicted Total Length", pch = 19, col = "black")
abline(0, 1, col = "blue")
avPlots(multReg)
```

```{r}
#Residuals distribution looks normal
ggplot(data = data) +
  geom_histogram(aes(x = Residuals, y = after_stat(density)), 
                 binwidth = 4) +
  stat_function(fun = dnorm, color = "red", linewidth = 2,
                args = list(mean = mean(data$Residuals), 
                            sd = sd(data$Residuals))) 


```

```{r}
#Plot the resiudals and their linearity
#Also ploted the 4 other plots we alwasy do
sex<-ggplot(data = data) +
  geom_point(mapping = aes(x = chest, y = Residuals)) +
  theme(aspect.ratio = 1)

site<-ggplot(data = data) +
  geom_point(mapping = aes(x = site, y = Residuals)) +
  theme(aspect.ratio = 1)

head<-ggplot(data = data) +
  geom_point(mapping = aes(x = hdlngth, y = Residuals)) +
  theme(aspect.ratio = 1)

tail<-ggplot(data = data) +
  geom_point(mapping = aes(x = taill, y = Residuals)) +
  theme(aspect.ratio = 1)

grid.arrange(sex, site,head,tail, ncol = 2)
autoplot(multReg)
```

```{r}
#No influential points
cd_cont_pos <- function(leverage, level, model) {sqrt(level*length(coef(model))*(1-leverage)/leverage)}
cd_cont_neg <- function(leverage, level, model) {-cd_cont_pos(leverage, level, model)}

cd_threshold <- 0.5
autoplot(multReg, which = 5) +
  stat_function(fun = cd_cont_pos,
                args = list(level = cd_threshold, model = multReg),
                xlim = c(0, 0.6), lty = 2, colour = "red") +
  stat_function(fun = cd_cont_neg,
                args = list(level = cd_threshold, model = multReg),
                xlim = c(0, 0.6), lty = 2, colour = "red") +
  scale_y_continuous(limits = c(-4, 4))
```

```{r}
#confinterval for all vartiables in model
print(confint(multReg, level =0.95))
```

```{r}
#testing if the site of a possum  has statistically significant effect on total length
noGroup = lm(totlngth ~ chest +hdlngth+taill , data = data)
anova(multReg, noGroup)
```

```{r}
#Testing the interaction term between sex and the head length variable seems to be not statsitcally sig
data$sexm = ifelse(data$sex == "m", 1,0)
data$sexf = ifelse(data$sex == "f", 1,0)
interaction_model = lm(totlngth ~ site +sexf +sexm +hdlngth+ taill+ hdlngth:sexf +hdlngth:sexm, data = data)


anova(interaction_model, multReg)
```

```{r}
#model is still dookie
summary(multReg)
```
