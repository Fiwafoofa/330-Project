---
title: "330 Project"
format: html
editor: visual
---

```{r}
library(gridExtra)
library(multcomp)
library(dplyr)
library(tidyverse)
library("corrplot")
library(caret)
library(ggplot2)
library(ggfortify)
library(GGally) 
library(glmnet)
library(bestglm)

```

# Read Code

```{r}
#Read in data, drop Nan values, reorder columns to work for variable selection methods, dropped "row number" column
set.seed(80085)
data = read.csv("possum.csv", sep =",")
data = data.frame(data)
data = na.omit(data)
print(sum(is.na(data)))

data = data[,-1]
data$Pop = factor(data$Pop, levels =c("other","Vic"))
data$sex = factor(data$sex, levels =c("m","f"))
data = data %>% relocate(totlngth, .after = belly)
X=as.matrix(data[, 2:13])
y=(data$totlngth)
```

# Variable Selection

```{r}
# Below are all the variable selection methods, need to determine what critera we want to use AIC or BIC and potenially just fit models with each methods variables and compare them
aic_model = bestglm(data, IC = "AIC", method = "exhaustive")
bic_model = bestglm(data, IC = "BIC", method = "exhaustive")
summary(aic_model$BestModel)
summary(bic_model$BestModel)
```

```{r}
#Best AIC value is 161, with  hdlngth,taill,site as the variables
base = lm(totlngth ~ 1, data = data)
final = lm(totlngth ~ . , data = data)
forward_step = step(base,direction = "forward",k = log(nrow(data)),scope = list(lower= base, upper = final))
print(forward_step)
```

```{r}
#returns the same as forward selection, AIc 161 and same variables
back_step = step(final ,direction = "backward", k =log(nrow(data)),scope = list(lower= base, upper = final))
print(back_step)
```

```{r}
#AIC:160, totlngth ~ site + hdlngth + taill
bic = step(final ,direction = "both", k =log(nrow(data)),scope=list(lower= base, upper= final))

#AIC: 165, totlngth ~ hdlngth + taill + site
bic_inter = step(base, direction = "both", k = log(nrow(bodyfat)),scope=list(lower= base, upper= final))

#AIC: 150, totlngth ~ site + sex + hdlngth + taill
aic_step = step(final ,direction = "both",scope=list(lower= base, upper= final))

#AIC: 150, totlngth ~ hdlngth + taill + site
aic_inter = step(base ,direction = "both",scope=list(lower= base, upper= final))

```

```{r}
#Elastic Net: site, hdlngth, taill, footlgth, chest 
set.seed(69)
X=as.matrix(data[, 1:12])
y=(data$totlngth)
net = cv.glmnet(x = X, y= y, type.measure = "mse", alpha =.5)
out = (coef(net, s="lambda.1se"))
print(out)
```

```{r}
#Lasso: site,hdlngth, taill, footlngth, chest
set.seed(69)
env_lasso_cv=cv.glmnet(x = X,
                          y = y,
                          type.measure = "mse",
                          alpha = 1)  # 1 is code for "LASSO"
coef(env_lasso_cv, s = "lambda.min")
```

# Fit Model

```{r}
linReg= lm(totlngth ~ site + hdlngth + taill + footlgth + chest, data = data)
summary(linReg)

data$residuals = linReg$residuals
```

# Check Assumptions

## Linearity

```{r}
# plot(data) Useless
# site + hdlngth + taill + footlgth + chest
ggplot(data = data) +
  geom_point(mapping = aes(x = site, y = residuals)) +
  theme(aspect.ratio = 1)

ggplot(data = data) +
  geom_point(mapping = aes(x = hdlngth, y = residuals)) +
  theme(aspect.ratio = 1)

ggplot(data = data) +
  geom_point(mapping = aes(x = taill, y = residuals)) +
  theme(aspect.ratio = 1)

ggplot(data = data) +
  geom_point(mapping = aes(x = footlgth, y = residuals)) +
  theme(aspect.ratio = 1)

ggplot(data = data) +
  geom_point(mapping = aes(x = chest, y = residuals)) +
  theme(aspect.ratio = 1)
 
# ggplot(data = data) +
#   geom_point(mapping = aes(x = <INSERT VAR HERE>, y = residuals)) +
#   theme(aspect.ratio = 1)


```

## Independence

## Normality of Residuals

## Equal/Constant Variance

## Multicollinearity
